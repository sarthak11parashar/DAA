#include<iostream>
using namespace std;

int FOccurrence(int arr[], int n, int key) {
    int start = 0;
    int end = n-1;
    int Findex = -1;
    
    while (start <= end) {
        int mid = start + (end - start)/2;
        if (arr[mid] == key) 
        {
            Findex = mid;
            end = mid - 1; 
        } 
        else if (arr[mid] < key)
        {
            start = mid + 1;
        }
        else {
            end = mid - 1;
        }
    }
    return Findex;
}

int LOccurrence(int arr[], int n, int key) {
    int start = 0;
    int end = n-1;
    int Lindex = -1;
    while (start <= end) {
        int mid = start + (end - start)/2;
        if (arr[mid] == key) 
        {
            Lindex = mid;
            start = mid + 1;
        } 
        else if (arr[mid] < key)
        {
            start = mid + 1;
        }
        else {
            end = mid - 1;
        }
    }
    return Lindex;
}


int main() {
    int T;
    cin >> T;
    while (T--) 
    {
        int n;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; ++i) 
        {
            cin >> arr[i];
        }
        int key;
        cin >> key;
        int lastOccurrence = LOccurrence(arr,n,key);
        int firstOccurrence = FOccurrence(arr,n,key);
        int TOccurrence = lastOccurrence - firstOccurrence + 1;

    if (TOccurrence > 0)
        cout<<key<<" "<<TOccurrence;
    else
        cout<<"Key Not Present";
    }
}
