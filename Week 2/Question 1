#include <iostream>
using namespace std;

int FOccurence(int arr[], int size, int key) {
    int start = 0;
    int end = size - 1;
    int Findex = -1;

    while (start <= end) {
        int mid = start + (end - start) / 2;
        if (arr[mid] == key) {
            Findex = mid;
            end = mid - 1;
        } else if (arr[mid] < key) {
            start = mid + 1;
        } else {
            end = mid - 1;
        }
    }
    return Findex;
}

int LOccurence(int arr[], int size, int key) {
    int start = 0;
    int end = size - 1;
    int Lindex = -1;
    while (start <= end) {
        int mid = start + (end - start) / 2;
        if (arr[mid] == key) {
            Lindex = mid;
            start = mid + 1;
        } else if (arr[mid] < key) {
            start = mid + 1;
        } else {
            end = mid - 1;
        }
    }
    return Lindex;
}

int main() {
    int T;
    cin >> T;
    while (T--) {
        int n;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; ++i) {
            cin >> arr[i];
        }
        int key;
        cin >> key;
        int lastOccurrence = LOccurence(arr, n, key);
        int firstOccurrence = FOccurence(arr, n, key);
        int TO = lastOccurrence - firstOccurrence + 1;

        if (firstOccurrence == -1 && lastOccurrence == -1) {
            cout << "Key Not Present" << endl;
        } else if (TO > 0) {
            cout << key << "-" << TO << endl;
        }
    }
    return 0;
}

