#include<iostream>
using namespace std;

void merge_sorted_array(int arr[], int si, int ei, int& comparisons, int& inversions)
{
    int mid = (si + ei) / 2;
    int temp[ei - si + 1];
    int i = si;
    int j = mid + 1;
    int k = 0;

    while (i <= mid && j <= ei)
    {
        if (arr[i] <= arr[j]){
            temp[k] = arr[i];
            i++;
        }
        else{
            temp[k] = arr[j];
            j++;
            inversions += mid - i + 1;
        }
        k++;
        comparisons++;;
    }

    while (i <= mid){
        temp[k] = arr[i];
        i++;
        k++;
    }
    while (j <= ei){
        temp[k] = arr[j];
        j++;
        k++;
    }

    for (int m = 0; m < k; m++){
        arr[si + m] = temp[m];
    }

}

void merge_sort(int arr[], int si, int ei, int& comparisons, int& inversions)
{
    if (si>=ei){
        return;
    }
    int mid = (si + ei) / 2;
    merge_sort(arr, si, mid, comparisons, inversions);
    merge_sort(arr, mid + 1, ei, comparisons, inversions);
    merge_sorted_array(arr, si, ei, comparisons, inversions);
}

int main(){
    int t;
    cin>>t;
    while (t--)
    {
        int n;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; ++i) {
            cin>>arr[i];
        }

        int comparisons = 0;
        int inversions = 0;

        merge_sort(arr, 0, n - 1, comparisons, inversions);

        for (int i = 0; i < n; i++) {
            cout << arr[i] << " ";
        }
        cout<<endl<<"Comparisons: "<<comparisons;
        cout<<endl<<"Inversions: "<<inversions<<endl;
    }
}
